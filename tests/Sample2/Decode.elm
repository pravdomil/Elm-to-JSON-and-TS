module Sample2.Decode exposing (..)

{-| Generated by elm-json-interop.
-}

import Json.Decode as D exposing (Decoder)
import Sample2 as A
import Utils.Json.Decode_ as D_


sampleType : Decoder A.SampleType
sampleType =
    D.field "_" D.int
        |> D.andThen
            (\i___ ->
                case i___ of
                    0 ->
                        D.succeed A.SampleType

                    _ ->
                        D.fail ("I can't decode " ++ "SampleType" ++ ", unknown variant with index " ++ String.fromInt i___ ++ ".")
            )
